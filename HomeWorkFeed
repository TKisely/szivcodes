Házi feladat 09 22
Téma: for ciklus lecserélése while ciklusra
Hozzon letre egy függvényt, (melyben nem használhat for ciklust) amely kiírja az egész számokat 
valamilyen egész számtól egy másik egész számig. Figyeljünk arra, hogy biztosan jól fusson a program minden esetben.
Majd valósítsa meg ugyanezt a funkciót egy másik függvényben, melyben for ciklust használ.
Hasonlítsa össze a két ciklust:
  -miben különböznek, hogy épülnek fel
Ezeket a megfigyeléseket vagy egy kiegészítő szöveges dokumentumban töltse fel, vagy a kész kód mellé kommentelve.
(kommentelni soronként a // jellel lehet, vagy /* ide jön szöveg */ jelek között)

--------------//--------------

Házi feladat 09 20
Nézzuk át az előző hazikat (főleg az előző 2-t)
Akinek nincs meg a működő kód, az kérem kérje el, vagy lopja le valakitől, vagy KÓDOLJA LE MAGA!
És töltse fel még MA a saját gitHubjára megfelelő névvel ellátva, hogy megtaláljam!

Holnap DOLGOZAT! 
//Papíron for ciklusok//

Továbbá Kötelező átnézni:
https://github.com/TKisely/tananyag/blob/master/main.cpp

Feladatok:
a)
Hozzon létre egy programot, melynek a main függvénye a következőt tartalmazza csak:
Kiírja konzolra, hogy ,, A program sikeresen lefutott"

b)
Hozzunk létre egy függvényt a megfelelő helyre, amely kiirja az első 20 páros számot.
Hívjuk meg ezt a fgv.-t a megfelelő helyen.

c)
Hozzunk létre egy függvényt és hívjuk is meg egy tetszőleges számmal, 
mely képes a ,,S" karaktert tetszőleges számszor kiírni egymás után.

d)
Hozzunk létre egy függvényt és hívjuk is meg egy tetszőleges számmal, 
mely egy egész számot kap paraméterlistán, és a következő az output:

Paraméter: 3  Paraméter: 5
LLL           LLLLL
LLL           LLLLL
LLL           LLLLL
              LLLLL
              LLLLL
              
Tehát tetszőleges méretű négyzeteket rajzol ki L betűkből.

e)
Hozzunk létre egy függvényt és hívjuk is meg egy tetszőleges számmal, 
mely egy egész számot kap paraméterlistán, és a következő az output:

Paraméter: 3    Paraméter: 5
EEE             EEEEE
EE              EEEE
E               EEE
                EE
                E

Tehát tetszőleges számmal megegyező méretű háromszögeket rajzol ki E betűkből.





--------------//--------------


Házi feladat: 09 14
Rekurzió 
  - Fibonacci számsor kiírása for és while ciklussal és rekurzívan is 
      (külön függvények, amiket a mainben lehet meghívni, egy db egész szám legyen mindnek a paramétere)
  
--------------//--------------

Házi feladat: 09 06
Hozzon létre egy függvényt, mely visszaadja egy tetszőleges egész szám tetszőleges egész kitevős hatványát:
a)
minta -- int hatvany(int szam, int kitevo){
                             int eredmeny .....
                             ....
                             ....
                             return eredmeny;
                    }
                    
b)
hozzon létre egy programot, mely kirajzol egy számpiramist a következő módon:
input:
          priamis(6);
          
output:
          654321
          54321
          4321
          321
          21
          1
          
input:
          piramis(3);
          
output:
          321
          21
          1
          
          
--------------//--------------

Házi feladat: 09 03
Elmélet: Kérem tessék átnézni mindent, amit eddig vettünk, mivel rögtön az első alkalommal röpivel kezdünk!
Ami biztos benne lesz: 
          általunk tanult típusok (változók) - pl tárolj egy egész számot ,,a" néven
          ciklusok - mi a különbség a for, while, do while felépítésében és lefutásában
          osztályt létre kell tudni hozni fejből, akár papíron is le kell tudni kódolni hiba nélkül
          tudni kell, hogy mi az az include, miért használjuk, avagy mit tesz lehetővé
          fogok kérni egy db uml-t egy egyszerű örökléses osztályról
          fgv. alapvető felépítése és használata
Gyakorlati rész:
           Töltsenek fel egy kódot, mely 4 osztályt tartalmaz
           Edesseg néven, melynek egyetlen paramétere a cukormennyisége (egész szám)
           HidegEdesseg, melynek plusz paramétere a maximális hőfök, amin még fogyasztható (egész szám)
           Sutemeny, melynek a plusz paramétere a sütési idő (egész szám)
           Fagylalt, melynek plusz paramétere az íze (szöveg)
           
           Határozzák meg a megfelelő öröklést, és az alapján valósítsák meg a kódot!
           Kell toString()!!!
           A main fgv.-be hozzanak létre megfelelő példányokat és írják ki az adataikat!
           
           Amennyiben tehetik, kezdjenek el átszokni Code::Blocks fejlesztési felületre, általam javasolt a Fortran verzió,
           teljesen ingyenes, kis méretű, minden oprendszeren fut.
           
           Mi az év folyamán már csak azt fogjuk használni, mert csak azzal érjük el a helyi fájlokat a gépen,
           és az érettségiben ez lesz a feladatuk.
           
Határidő VASÁRNAP DÉL...

--------------//--------------

Hazi feladat: 06 20
Elmelet: UML diagram onallo kijegyzetelese (magyar nyelven is megtalalhato)
          - hogyan abrazolunk mezoket
           - hogyan abrazolunk fgv.eket
           - hogyan jelezzuk a lathatosagokat
           - hogyan jelezzuk a konstruktort
           - hogyan jelezzuk az oroklest es annak tipusat
Gyakorlat:
  a) Hozzon letre 3 osztalyt
    - Epulet, Haz, Garazs
    - Tulajdonsagok :
      -Epulet: ablakok szama, alapterulet
      -Haz : ablakok szama, alapterulet, szobak szama, ajtok szama
      -Garazs : ablakok szama, alapterulet, parkolohelyek szama
      
   Keresse meg a megfelelo oroklesi rendszert, abrazolja UML diagramon, es irjon proba kodot, amely teszteli a program futasat.
      
  b) Hozzon letre 7 osztalyt
    -Noveny, Zoldseg, Gyumolcs, Paprika, Hagyma, Meggy, Korte
    -Tulajdonsagok (teljes megvalositasi listaval):
        -Novenynek : int meret, Konstruktor, getter+setter, toString()
        -Zoldseg : int meret, int csipossegFoka, Konstruktor, getter+setter, toString()
        -Gyumolcs : int meret, int edessegFoka, Konstruktor, getter+setter, toString()
        -Paprika : int meret, int csipossegFoka, string szin, Konstruktor, getter+setter, toString()
        -Hagyma : int meret, int csipossegFoka, int retegekSzama, Konstruktor, getter+setter, toString()
        -Meggy : int meret, int edessegFoka, bool magozott, Konstruktor, getter+setter, toString()
        -Korte : int meret, int edessegFoka, bool erette, Konstruktor, getter+setter, toString()
        
      Keresse meg a megfelelo oroklesi rendszert, abrazolja UML diagramon es hozzon letre pelda kodot, mely teszteli a
      program futasat.
      
     Kovetkezo orara szukseges ismeretek:
     Metodus felepitese, Osztaly felepitese, Orokles megfelelo kezelese konstruktorokban, Lathatosagok
     
--------------//--------------

HaziFeladat 06 18:
Hozzon letre egy 10 elemu tombot a main fgv.ben, mely egesz szamokat tarolhat
Toltse fel a main fgv.en belul egy for ciklussal 5tel oszthato (5, 10, 15...)
Fgv. megnezi, hogy van-e benne tetszoleges szammal oszthato szam. (parameter listan kapja meg, hogy mivel legyen oszthato)
Majd kiirje egy kulon fgv segitsegevel, hogy az oszto szammal oszthato szam van-e benne.
Pelda kiiras (megoldas):
True: A szamok kozott van ...tal oszthato szam.
False: A szamok kozott nincs a ...tal oszthato szam.

-------------//---------------

HaziFeladat:
2 szam szorzat metodus
nagyobb szam osztasa kisebbel metodus
