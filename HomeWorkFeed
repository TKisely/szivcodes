Házi feladat 3 4

Dolgozza fel a  fajlom.txt  állományt, melynek a felépítése a következő:
FUTÓ NEVE tab ELSŐNAPKM tab MÁSODIKNAPKM tab HARMADIKNAPKM
FUTÓ NEVE tab ELSŐNAPKM tab MÁSODIKNAPKM tab HARMADIKNAPKM
...
A km tizedesvessző használatával van tárolva, így konvertálni kell.

Megfelelő osztály és adattároló segítségével tárolja el az értékeket későbbi feldolgozásra.

További feladatok:
-Adott futó legjobb napja (írja ki, hogy hanyadik nap volt a legjobb és hány km-t futott)
-Adott futó legrosszabb napja (írja ki, hogy hanyadik nap volt a legrosszabb és hány km-t futott)

-A 3 nap alatt legkevesebbet futott futó (név és összKM)
-A 3 nap alatt legtöbbet futott futó (név és összKM)

-Adott nap átlaga (összes futóra nézve átlagoljunk, mind a 3 nap kell külön-külön)
-Teljes átlagolás, tehát minden futó minden napját külön értéknek vesszük és ezeket az értékeket átlagoljuk.

A beadott munka osztályzásra (TZ) kerül:
Kettes szint a további feladatok előtti rész tökéletes lefutása


--------------//--------------

Házi feladat 2 13

Felkerült az eddigi feldolgozás bontott formában (függvényekre bontva magyarán) annak érdekében, hogy külön
is lássák az egyes darabokat. Kérem Önöket, hogy HÉTFŐig gyakorolják be, mert témazáró jelleggel írni fognak.

bontottFajlFelDolg.cpp elvileg a neve.

--------------//--------------

Házi feladat 1 27

fileIrasOlvasas.cpp megtanulasa - szamonkeres lesz netes segitseg nelkul.

fajlFeldolgozas.cpp letoltese, futtatasa, kommentek elhelyezese (magyarazat minden lepesrol)

--------------//--------------

Házi feladat 12 14
Téma: Algoritmusok

Szövegesen (külön lapra, kóddal együtt) : 
Kérem mutassa be a maximum kereső algoritmus működését
Kérem mutassa be a minimum kereső algoritmus működését
Kérem mutassa be a cserélő algoritmus működését

--------------//--------------

Házi feladat 12 10
Téma: vector

Hozzunk lére egy termék osztályt.
Minden terméknek legyen: 
- cikkszáma (4 jegyű egész szám - tessék megpróbálni ezt ellenőrizni a megfelelő helyen)
- neve
- ára (Ft - kiírásnál fontos csak)
- súlya (kg - kiírásnál fontos csak)
- megfelelő konstruktora(i)
- megfelelő gettere(i)

Hozzunk létre egy webshop osztályt.
Minden webshopnak legyen:
- raktáron lévő termékeket tároló vectora
- eladott termékeket tároló vectora
- neve
- címe
- megfelelő konstruktora(i)
- megfelelő gettere(i)

További függvények és elvárások:
A webshop gondoskodjon arról, hogy a két vector megfelelő termékeket tartalmazzon, tehát ha pl. eladunk valamit,
akkor az már ne legyen raktáron, viszont jelenjen meg mint eladott termék.
A webshop tudja számítani, hogy mekkora volt a bevétele.
A webshop meg tudja mondani, hogy melyik volt a legdrágább és legolcsóbb eladott terméke.
A webshop meg tudja mondani, hogy hány terméket adott el.
Tessék kihasználni a vector beépített függvényeit:

push_back() - hátulra betölt
erase() - elemet töröl
swap() - cserél
size() - megmondja a méretét
.
.
.
Javasolt weboldal: https://www.geeksforgeeks.org/vector-in-cpp-stl/

A main függvényben tessék írni egy példakódot, ami bemutatja, hogy minden függvény megfelelően működik.

A házi bemutatása kötelező, osztályzatot fognak rá kapni!
Amennyiben szeretnék plusz értelmes funkciókkal kipótolni plusz pontot tudok rá adni.

EXTRA (nem kell most alkalmazni, de következő órára tessék ismerni)
Konzolról való sorbeolvasás fel fog kerülni a kódok közé Sorbeolvasas.cpp néven, tessék vele ismerkedni.

--------------//--------------

Házi feladat 11 26
Projekt feladat:

  Választható témák:
    -Pénztár (termék neve, ára, vonalkód) Árvai
    -Bankkártya tranzakció (dátum, hely, összeg) Berci
    -Teendő lista (dátum, időtartam, fontosság) Dani
    -Bevásárló lista(termék neve, darabszám, ár) Rita
    
    Függvények: Minimum számítás, maximum számítás, átlagolás, összeg
    
    

--------------//--------------

Házi feladat 10 24
Téma: rendezések
Készítsünk egy tesztelő programot, mely bemutatja a Buborék rendezés folyamatát.
Bubble sort az angol neve, végtelen magyar és angol leírás található hozzá, továbbá mi is néztünk már róla videót.
A kód is természetesen elérhető, mindent tanultunk már hozzá. 
(pointereket tudunk állítani, ideiglenes változót használtunk már, ha cseréről volt szó)
Elvárások:
  Változók/tömbök:
    Egyetlen egy egész számokat tartalmazó tömböt kötelező létrehozni, minden más saját döntés alapján
  Függvények:
    Csere függvény - képes legyen két elemet felcserélni a tömbünkben
    Buborék rendezés függvénye (növekvő v. csökkenő saját döntés)
    Tömb kiírása fgv. (minden elemet szépen a megszokott módon: Helye és értéke)
  Logika:
    Magát a tömböt rendezzük, ne egy új tömbbe kerüljenek be a számok sorban
    A rendező NE kapjon paraméterként tömböt, az általunk létrehozott tömbön dolgozzon
    
  Egyéb:
    Kérem a rendezés maga is legyen megfelelően ellátva kiírásokkal, hogy maga a folyamat is látszódjon.
    Tehát:
      Írja ki minden cserénél, hogy pontosan melyik két elem lett cserélve.
      Írja ki minden egyes alkalommal, amikor a tömb végére ér, hogy mi az aktuális állás (teljes tömb)
      Írja ki a legvégső állapotot
      Írja ki a kezdeti állapotot
      
    Kérem a kód rendelkezzen kommentekkel, amit a // jellel lehet beszúrni, írjuk oda, hogy melyik fgv. mit csinál.
    
    Határidő vasárnap dél.

--------------//--------------

Házi feladat 10 19
Téma: cin alkalmazása és tömbök
1:
Készítsen egy függvényt, mely a konzolról vár egy számot és kiírja a szám négyzetét
2:
Készítsen egy függvényt, mely a konzolról vár egy számot és kiírja a szám faktoriálisát
3:
Készítsen egy függvényt, mely a konzolról vár két számot és kiírja a két szám összegét
4:
Készítsen egy függvényt, mely paraméterként vár egy számot, ez legyen mondjuk x, majd kiírja az első x db páratlan
pozitív számot
5:
Készítsen egy függvényt, mely a konzolról vár egy számot, majd kiírja, hogy paros, ha páros, és paratlan, ha páratlan
a kapott szám
6: (gondolkodósabb)
Készítsen egy függvényt, mely addig olvas be számokat, amíg a kapott szám nem nulla
7: (még gondolkodósabb, tessék próbálkozni, NEM adjuk fel!)
Készítsen egy programot, mely addig vár számokat, míg a kapott szám nagyobb mint nulla, és mindig kiadja az addig kapott
legnagyobb számot.
Ha még nem kapott számot, akkor 0-t írjon ki.

Határidő: Szerda dél. Az első 5 mindenkinek Önállóan kötelező!
Szerda délben kerül fel a következő házi feladat.

--------------//--------------

Hazi feladat 10 16
Mint mondottam vala a kovetkezo alkalommal DOLGOZATra tessek szamitani!!
Hf.:
https://infoc.eet.bme.hu/qsort/

Tovabba az elozo hazik potlasa akit erint!

--------------//--------------

Házi feladat 10 10
Megjegyzés: Remélem mindenkinek elég időt hagytam, hogy pótolhassa az előző házi feladatot, 
vagy kiegészítse azt az elvárt módon. Kérem aki ezt nem tette meg, ma éjfélig mindenképp töltse fel a teljes megoldást.

Téma: Tömbök bejárása pointerekkel
Jelenleg a feladatunk ott tart, hogy létezik egy globális tömbünk, aminek a #define segítségével adtuk meg a méretét.
A következő függvényekkel tessék kiegészíteni:
a) Minden elemet lecserél az eredeti elem tízszeresére. (Pointerrel)
  Ez a fgv. ne rendelkezzen visszatérési értékkel.
  A fgv. ciklusán belül szerepeljenek a következő kiíratások:
    - Mi volt az eredeti érték
    - Mi volt az eredeti érték címe
    - Mi az új érték
    - Mi az új érték címe
b) Visszaadja egy kért elem címét 
    (paraméterként az elem indexét kapjuk meg, továbbá egy "helyet", ahova tehetjük a címet)
  Ez a fgv. igazzal térjen vissza, ha megfelelő indexet kapott és hamissal, 
  amennyiben a használt tömbben nem létezik a kért index.
  Gondolkozzunk el, hogy mivel lehet címet tárolni, avagy mi az, ami konkrétan egy címet tárol.

--------------//--------------

Házi feladat 10 05
Téma I. : Ciklusok
a) Hozzon létre egy függvényt (neve negativPiramis legyen), mely egy egész számot kap paraméterként, 
és annak megfelelően a következőt írja ki:
Paraméter: 3  Paraméter: 5
LLL           LLLLL
LL            LLLL
L             LLL
              LL
              L
              
b) Hozzon létre egy függvényt (neve pozitivPiramis legyen), mely egy egész számot kap paraméterként, 
és annak megfelelően a következőt írja ki:
Paraméter: 3  Paraméter: 5
L             L
LL            LL
LLL           LLL
              LLLL
              LLLLL
              
c) Hozzon létre egy függvényt, mely az előzőeket egyesíti a következő képpen:

Paraméterek: (2,5)
L
LL            
LLL
LLLL
LLLLL
LLLLL
LLLL
LLL
LL
L
L
LL            
LLL
LLLL
LLLLL
LLLLL
LLLL
LLL
LL
L

Paraméterek: (3,2)
L
LL
LL
L
L
LL
LL
L
L
LL
LL
L

Paraméterek: (5,3)
L
LL
LLL
LLL
LL
L
L
LL
LLL
LLL
LL
L
L
LL
LLL
LLL
LL
L
L
LL
LLL
LLL
LL
L
L
LL
LLL
LLL
LL
L


Téma II. : Pointerek

a) Hozzon létre 4 db egész számokat tárolni képes változót, melyekből az első kettőnek adjon megfelelő értéket is.
Elnevezések a következők legyenek: elsoSzam, masodikSzam, ...
Írassa ki mind a 4-nek az értékét és címét (megfelelő szöveggel, szóközökkel, sortörésekkel)
Törekedjen átlátható kódra.

b) Hozzon létre egy függvényt (visszatérési értéke IGAZ/HAMIS), mely paraméterlistán vár egy megváltoztatandó számot.
A számot cserélje le a szám duplájára.
Hívja meg ezt a függvényt a main()-ben egy megfelelő változóval (melynek van már értéke!).
Írassuk ki ismét a main()-ben mind a 4 változó értékét és címeit.

c) Hozzon létre egy függvényt, mely visszatér a paraméterként kapott szám négyzetével.
Hívjuk meg ezt a függvényt a main()-ben úgy, hogy az értékét a harmadikSzam-ba tároljuk el.
Írassuk ki ismét a main()-ben mind a 4 változó értékét és címeit.

d) Hozzon létre egy globális tömböt, egy megfelelő define paranccsal adjon neki méretet.
A main()-ben egy ciklussal írja ki a tömb elemeinek a címeit és a tárolt értékekeket.
A kiírt szöveg legyen egyértelmű és átlátható!!
Majd töltse fel a tömböt az indexeinek megfelelő számokkal (tahát pl a 4. helyen a hármas szám álljon,
az 5. helyen a négyes, stb...) és írassuk ki újra a címeket és az értékeket.

e)
Készítsen a II. téma kódjaihoz dokumentációt.
Mit írtunk ki? Miért? Mit látunk? Miért ezt látjuk? Mi mit lát? Mi mit ér el? Miért nem éri el/Miért éri el? stb...

--------------//--------------

Házi feladat 09 24
Téma: fix méretű tömbök
Hozzon létre egy globális, egész számokat tároló tömböt, majd definiáljon egy fix méretet neki a tanult módon.
a)
Készítsen egy függvényt, mely ebbe a globális tömbbe beleír 2-től annyi páros számot, amennyi csak belefér.
b)
Készítsen egy függvényt, mely kiírja az összes elemét a tömbnek console-ra (minden elem után tabot elhelyezve)
c)
Készítsen egy másik globális fix méretű tömböt az előzőhöz hasonlóan, viszont ez a tömb karaktereket legyen képes tárolni.
d)
Módosítsa úgy a tömböt, hogy képes legyen [kulcs -> több érték] párokat tárolni (mind a kettő karakter).

--------------//--------------

Házi feladat 09 22
Téma: for ciklus lecserélése while ciklusra
Hozzon letre egy függvényt, (melyben nem használhat for ciklust) amely kiírja az egész számokat 
valamilyen egész számtól egy másik egész számig. Figyeljünk arra, hogy biztosan jól fusson a program minden esetben.
Majd valósítsa meg ugyanezt a funkciót egy másik függvényben, melyben for ciklust használ.
Hasonlítsa össze a két ciklust:
  -miben különböznek, hogy épülnek fel
Ezeket a megfigyeléseket vagy egy kiegészítő szöveges dokumentumban töltse fel, vagy a kész kód mellé kommentelve.
(kommentelni soronként a // jellel lehet, vagy /* ide jön szöveg */ jelek között)

--------------//--------------

Házi feladat 09 20
Nézzuk át az előző hazikat (főleg az előző 2-t)
Akinek nincs meg a működő kód, az kérem kérje el, vagy lopja le valakitől, vagy KÓDOLJA LE MAGA!
És töltse fel még MA a saját gitHubjára megfelelő névvel ellátva, hogy megtaláljam!

Holnap DOLGOZAT! 
//Papíron for ciklusok//

Továbbá Kötelező átnézni:
https://github.com/TKisely/tananyag/blob/master/main.cpp

Feladatok:
a)
Hozzon létre egy programot, melynek a main függvénye a következőt tartalmazza csak:
Kiírja konzolra, hogy ,, A program sikeresen lefutott"

b)
Hozzunk létre egy függvényt a megfelelő helyre, amely kiirja az első 20 páros számot.
Hívjuk meg ezt a fgv.-t a megfelelő helyen.

c)
Hozzunk létre egy függvényt és hívjuk is meg egy tetszőleges számmal, 
mely képes a ,,S" karaktert tetszőleges számszor kiírni egymás után.

d)
Hozzunk létre egy függvényt és hívjuk is meg egy tetszőleges számmal, 
mely egy egész számot kap paraméterlistán, és a következő az output:

Paraméter: 3  Paraméter: 5
LLL           LLLLL
LLL           LLLLL
LLL           LLLLL
              LLLLL
              LLLLL
              
Tehát tetszőleges méretű négyzeteket rajzol ki L betűkből.

e)
Hozzunk létre egy függvényt és hívjuk is meg egy tetszőleges számmal, 
mely egy egész számot kap paraméterlistán, és a következő az output:

Paraméter: 3    Paraméter: 5
EEE             EEEEE
EE              EEEE
E               EEE
                EE
                E

Tehát tetszőleges számmal megegyező méretű háromszögeket rajzol ki E betűkből.





--------------//--------------


Házi feladat: 09 14
Rekurzió 
  - Fibonacci számsor kiírása for és while ciklussal és rekurzívan is 
      (külön függvények, amiket a mainben lehet meghívni, egy db egész szám legyen mindnek a paramétere)
  
--------------//--------------

Házi feladat: 09 06
Hozzon létre egy függvényt, mely visszaadja egy tetszőleges egész szám tetszőleges egész kitevős hatványát:
a)
minta -- int hatvany(int szam, int kitevo){
                             int eredmeny .....
                             ....
                             ....
                             return eredmeny;
                    }
                    
b)
hozzon létre egy programot, mely kirajzol egy számpiramist a következő módon:
input:
          priamis(6);
          
output:
          654321
          54321
          4321
          321
          21
          1
          
input:
          piramis(3);
          
output:
          321
          21
          1
          
          
--------------//--------------

Házi feladat: 09 03
Elmélet: Kérem tessék átnézni mindent, amit eddig vettünk, mivel rögtön az első alkalommal röpivel kezdünk!
Ami biztos benne lesz: 
          általunk tanult típusok (változók) - pl tárolj egy egész számot ,,a" néven
          ciklusok - mi a különbség a for, while, do while felépítésében és lefutásában
          osztályt létre kell tudni hozni fejből, akár papíron is le kell tudni kódolni hiba nélkül
          tudni kell, hogy mi az az include, miért használjuk, avagy mit tesz lehetővé
          fogok kérni egy db uml-t egy egyszerű örökléses osztályról
          fgv. alapvető felépítése és használata
Gyakorlati rész:
           Töltsenek fel egy kódot, mely 4 osztályt tartalmaz
           Edesseg néven, melynek egyetlen paramétere a cukormennyisége (egész szám)
           HidegEdesseg, melynek plusz paramétere a maximális hőfök, amin még fogyasztható (egész szám)
           Sutemeny, melynek a plusz paramétere a sütési idő (egész szám)
           Fagylalt, melynek plusz paramétere az íze (szöveg)
           
           Határozzák meg a megfelelő öröklést, és az alapján valósítsák meg a kódot!
           Kell toString()!!!
           A main fgv.-be hozzanak létre megfelelő példányokat és írják ki az adataikat!
           
           Amennyiben tehetik, kezdjenek el átszokni Code::Blocks fejlesztési felületre, általam javasolt a Fortran verzió,
           teljesen ingyenes, kis méretű, minden oprendszeren fut.
           
           Mi az év folyamán már csak azt fogjuk használni, mert csak azzal érjük el a helyi fájlokat a gépen,
           és az érettségiben ez lesz a feladatuk.
           
Határidő VASÁRNAP DÉL...

--------------//--------------

Hazi feladat: 06 20
Elmelet: UML diagram onallo kijegyzetelese (magyar nyelven is megtalalhato)
          - hogyan abrazolunk mezoket
           - hogyan abrazolunk fgv.eket
           - hogyan jelezzuk a lathatosagokat
           - hogyan jelezzuk a konstruktort
           - hogyan jelezzuk az oroklest es annak tipusat
Gyakorlat:
  a) Hozzon letre 3 osztalyt
    - Epulet, Haz, Garazs
    - Tulajdonsagok :
      -Epulet: ablakok szama, alapterulet
      -Haz : ablakok szama, alapterulet, szobak szama, ajtok szama
      -Garazs : ablakok szama, alapterulet, parkolohelyek szama
      
   Keresse meg a megfelelo oroklesi rendszert, abrazolja UML diagramon, es irjon proba kodot, amely teszteli a program futasat.
      
  b) Hozzon letre 7 osztalyt
    -Noveny, Zoldseg, Gyumolcs, Paprika, Hagyma, Meggy, Korte
    -Tulajdonsagok (teljes megvalositasi listaval):
        -Novenynek : int meret, Konstruktor, getter+setter, toString()
        -Zoldseg : int meret, int csipossegFoka, Konstruktor, getter+setter, toString()
        -Gyumolcs : int meret, int edessegFoka, Konstruktor, getter+setter, toString()
        -Paprika : int meret, int csipossegFoka, string szin, Konstruktor, getter+setter, toString()
        -Hagyma : int meret, int csipossegFoka, int retegekSzama, Konstruktor, getter+setter, toString()
        -Meggy : int meret, int edessegFoka, bool magozott, Konstruktor, getter+setter, toString()
        -Korte : int meret, int edessegFoka, bool erette, Konstruktor, getter+setter, toString()
        
      Keresse meg a megfelelo oroklesi rendszert, abrazolja UML diagramon es hozzon letre pelda kodot, mely teszteli a
      program futasat.
      
     Kovetkezo orara szukseges ismeretek:
     Metodus felepitese, Osztaly felepitese, Orokles megfelelo kezelese konstruktorokban, Lathatosagok
     
--------------//--------------

HaziFeladat 06 18:
Hozzon letre egy 10 elemu tombot a main fgv.ben, mely egesz szamokat tarolhat
Toltse fel a main fgv.en belul egy for ciklussal 5tel oszthato (5, 10, 15...)
Fgv. megnezi, hogy van-e benne tetszoleges szammal oszthato szam. (parameter listan kapja meg, hogy mivel legyen oszthato)
Majd kiirje egy kulon fgv segitsegevel, hogy az oszto szammal oszthato szam van-e benne.
Pelda kiiras (megoldas):
True: A szamok kozott van ...tal oszthato szam.
False: A szamok kozott nincs a ...tal oszthato szam.

-------------//---------------

HaziFeladat:
2 szam szorzat metodus
nagyobb szam osztasa kisebbel metodus
